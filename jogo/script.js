const gameArea = document.getElementById("gameArea");
const music = document.getElementById("backgroundMusic");
let isMusicStarted = false;
let scenes = [];
let currentSceneIndex = -1;

// Fun√ß√£o para iniciar a m√∫sica com uma intera√ß√£o do usu√°rio
function startMusic() {
    if (!isMusicStarted) {
        music.volume = 0.5;
        music.play().then(() => {
            isMusicStarted = true;
        }).catch(error => {
            console.error("Erro ao reproduzir m√∫sica:", error);
        });
    }
}

// Fun√ß√£o para alternar a reprodu√ß√£o da m√∫sica
function toggleMusic() {
    if (!isMusicStarted) {
        startMusic(); // Garante que a m√∫sica inicia com a intera√ß√£o do usu√°rio
    } else if (music.paused) {
        music.play();
    } else {
        music.pause();
    }
}

// Fun√ß√£o para alterar o volume da m√∫sica
function changeVolume(volume) {
    music.volume = volume;
}

// Fun√ß√£o para salvar o cen√°rio atual
function saveScene() {
    const sceneData = Array.from(gameArea.children).map(el => ({
        type: el.dataset.type,
        x: el.style.left,
        y: el.style.top
    }));
    scenes.push(sceneData);
    currentSceneIndex = scenes.length - 1;
    alert("Cen√°rio salvo!");
}

// Fun√ß√£o para limpar o cen√°rio atual
function clearScene() {
    gameArea.innerHTML = '<p>Solte os blocos aqui para construir seu cen√°rio.</p>';
}

// Fun√ß√£o para carregar o cen√°rio anterior
function previousScene() {
    if (currentSceneIndex > 0) {
        currentSceneIndex--;
        loadScene(scenes[currentSceneIndex]);
    } else {
        alert("Este √© o primeiro cen√°rio.");
    }
}

// Fun√ß√£o para carregar o pr√≥ximo cen√°rio
function nextScene() {
    if (currentSceneIndex < scenes.length - 1) {
        currentSceneIndex++;
        loadScene(scenes[currentSceneIndex]);
    } else {
        alert("Este √© o √∫ltimo cen√°rio.");
    }
}

// Fun√ß√£o para carregar um cen√°rio salvo
function loadScene(scene) {
    clearScene();
    scene.forEach(item => {
        const element = document.createElement("div");
        element.className = "draggable";
        element.dataset.type = item.type;
        element.textContent = getSymbol(item.type);
        element.style.position = 'absolute';
        element.style.left = item.x;
        element.style.top = item.y;
        gameArea.appendChild(element);
    });
}

// Fun√ß√£o auxiliar para obter o s√≠mbolo do bloco
function getSymbol(type) {
    const symbols = {
        "√°rvore1": "üå≥",
        "flor": "üå∏",
        "casa": "üè†",
        "pr√©dio": "üè¢",
        "carro": "üöó",
        "bicicleta": "üö≤",
        "pessoa": "üë©",
        "crian√ßa": "üë¶",
        "cachorro": "üê∂",
        "gato": "üê±"
    };
    return symbols[type] || "";
}

// Evento de arrastar blocos para o jogo
document.querySelectorAll(".block").forEach(block => {
    block.addEventListener("dragstart", (event) => {
        const draggedElement = document.createElement("div");
        draggedElement.className = "draggable";
        draggedElement.dataset.type = event.target.dataset.type;
        draggedElement.textContent = event.target.textContent;
        draggedElement.style.position = 'absolute';
        draggedElement.style.cursor = 'grab';

        gameArea.appendChild(draggedElement);

        gameArea.addEventListener('dragover', (e) => e.preventDefault());
        gameArea.addEventListener('drop', (e) => {
            e.preventDefault();
            const rect = gameArea.getBoundingClientRect();
            draggedElement.style.left = `${e.clientX - rect.left}px`;
           
